(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{574:function(t,s,e){"use strict";e.r(s);var a=e(59),i=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[t._v("#")]),t._v(" Session")]),t._v(" "),e("ul",[e("li",[t._v("통로(DB): 클라이언트와 서버 사이의 유일하게 개방되어있는 통로")]),t._v(" "),e("li",[t._v("시간(WEB): 클라이언트가 서버의 어플리케이션을 사용하고 있는 동안을 한 세션으로 정의 (최초의 요청 ~~~ 종료)")])]),t._v(" "),e("h2",{attrs:{id:"http-stateless-대화가-불가능하다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-stateless-대화가-불가능하다"}},[t._v("#")]),t._v(" HTTP: stateless(대화가 불가능하다)")]),t._v(" "),e("ul",[e("li",[t._v("HTTP 프로토콜은 기본적으로 상태가 없다. = 요청, 응답이 끝나면 그걸로 끝이다.")]),t._v(" "),e("li",[t._v("connectless('세션'이 web에선 '시간'이라는 의미로 쓰이는 이유. 비연결지향형:  웹에서 통로로 계속 열어놓으면 부하가 너무 크니 사용이 끝나면 다 끊어버린다)")]),t._v(" "),e("li",[t._v("(HTTP1.1 은 connectful, 연결지향형 버전이긴 함)")])]),t._v(" "),e("h2",{attrs:{id:"세션과-쿠키의-차이점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#세션과-쿠키의-차이점"}},[t._v("#")]),t._v(" 세션과 쿠키의 차이점")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbtYkEb%2FbtqHXDvmJRU%2F7hM6D66xT1TjFUgvzF4L10%2Fimg.png",alt:""}})]),t._v(" "),e("ul",[e("li",[t._v("만약 알라딘에서 장바구니 담을때 정보를 클라이언트쪽에 저장하면 쿠키, 서버쪽에 저장하면 세션")]),t._v(" "),e("li",[t._v("세션의 경우 브라우저가 다르면 다름, 세션 ID존재")])]),t._v(" "),e("h2",{attrs:{id:"session-tracking-mode-세션-id를-통해-세션을-식별하는-방법"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session-tracking-mode-세션-id를-통해-세션을-식별하는-방법"}},[t._v("#")]),t._v(" Session Tracking Mode (세션 ID를 통해 세션을 식별하는 방법)")]),t._v(" "),e("ul",[e("li",[t._v("클라이언트한테서 요청이 왔는데 ID가 없으면 최초의 요청으로 인식하고 새로운 ID를 만든다. 그 후 응답데이터에 세션 ID를 포함시켜 보내면 클라이언트쪽에서 다시 그 세션 ID를 담아서 보냄")])]),t._v(" "),e("ol",[e("li",[t._v("COOKIE: e.g. JSESSIONID 와 같은 세션 아이디를 식별할 수 있는 쿠키를 C-S 사이에서 주고 받는다.")]),t._v(" "),e("li",[t._v("SSL : Secure Layer를 통해 세션 아이디를 주고받는 방법. 전송 계층을 보안 처리하여 데이터를 보호하는 방법의 일종\n(http: non-secure, https: secure)")]),t._v(" "),e("li",[t._v("URL: 세션 식별을 위한 아이디를 request line을 통해 주고받는 방법 (보안에 취약)")])]),t._v(" "),e("h3",{attrs:{id:"쿠키란"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#쿠키란"}},[t._v("#")]),t._v(" 쿠키란?")]),t._v(" "),e("p",[t._v("쿠키: 웹 서버가 클라이언트에 전송하는 작은 데이터 조각.")]),t._v(" "),e("h2",{attrs:{id:"세션-종료-조건"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#세션-종료-조건"}},[t._v("#")]),t._v(" 세션 종료 조건")]),t._v(" "),e("ol",[e("li",[t._v("timeout 이내에 동일한 클라이언트로부터의 새로운 요청이 없을 때 / 톰캣: 30분")]),t._v(" "),e("li",[t._v("브라우저 종료")]),t._v(" "),e("li",[t._v("더이상 쿠키(JSESSIONID) 전송이 없을 때 **세션과 쿠키의 차이점 기술면접 잘나옴")]),t._v(" "),e("li",[t._v("*직접 로그아웃을 했을 때 (session을 invalidation)")])]),t._v(" "),e("p",[t._v("세션이 종료될 때 session scope도 사라진다.")])])}),[],!1,null,null,null);s.default=i.exports}}]);