(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{579:function(s,t,r){"use strict";r.r(t);var a=r(59),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,r=s._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h1",{attrs:{id:"ssr-vs-csr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ssr-vs-csr"}},[s._v("#")]),s._v(" SSR vs. CSR")]),s._v(" "),r("h2",{attrs:{id:"서버-사이드-렌더링-ssr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#서버-사이드-렌더링-ssr"}},[s._v("#")]),s._v(" 서버 사이드 렌더링 (SSR)")]),s._v(" "),r("p",[s._v("서버가 빌드 단계에서 페이지들을 미리 다 만들어두고 클라이언트가 접속 요청을 보내면 그때 그때 보내주는 방식."),r("br"),s._v("\nSSR은 빌드하면 기완성된 html이 생기고, 서버에서 브라우저에게 기완성 HTML+data를 합쳐 보내주기만 하면 된다. 그래서 빈 HTML을 받아 스크립트를 불러오는 등 브라우저에서 렌더링하는 CSR보다 첫 로딩이 빠르다.")]),s._v(" "),r("p",[s._v("전통적인 웹의 경우, 정적 페이지를 서버에서 만들어두고 보여주는 형식이었다. 이런 방식도 SSR이다.")]),s._v(" "),r("h2",{attrs:{id:"서버-사이드-렌더링의-장점"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#서버-사이드-렌더링의-장점"}},[s._v("#")]),s._v(" 서버 사이드 렌더링의 장점")]),s._v(" "),r("ol",[r("li",[s._v("검색 엔진 최적화 (미리 만들어두고, 메타 데이터를 저장해두니 검색엔진이 데이터를 더 잘 모은다.)")]),s._v(" "),r("li",[s._v("빠른 페이지 렌더링 (초기 로딩 속도 줄임)")])]),s._v(" "),r("h2",{attrs:{id:"클라이언트-사이드-렌더링-csr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#클라이언트-사이드-렌더링-csr"}},[s._v("#")]),s._v(" 클라이언트 사이드 렌더링 (CSR)")]),s._v(" "),r("p",[s._v("10 페이지가 있으면 10페이지의 js 번들 파일을 모두 불러옴 vs SSR: 해당 페이지 (10분의 1)만 불러오면 되므로 초기 로딩속도가 빠름.")])])}),[],!1,null,null,null);t.default=e.exports}}]);