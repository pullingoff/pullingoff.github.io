(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{568:function(t,a,r){"use strict";r.r(a);var s=r(59),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"process-management"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#process-management"}},[t._v("#")]),t._v(" Process Management")]),t._v(" "),r("h3",{attrs:{id:"프로세스의-생성"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#프로세스의-생성"}},[t._v("#")]),t._v(" 프로세스의 생성")]),t._v(" "),r("ul",[r("li",[t._v("부모 프로세스가 자식 프로세스를 만듦. ("),r("strong",[t._v("트리 구조")]),t._v(")")]),t._v(" "),r("li",[t._v("프로세스는 자원을 필요로 함 (os로부터 받음, 부모와 공유)")])]),t._v(" "),r("h3",{attrs:{id:"복제-생성-fork-exec"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#복제-생성-fork-exec"}},[t._v("#")]),t._v(" 복제 생성 (fork, exec)")]),t._v(" "),r("ul",[r("li",[t._v("자식 프로세스는 부모의 문맥(주소공간, 운영체제 등 자원, code,data, stack etc.)을 모두 복사")]),t._v(" "),r("li",[t._v("fork: 자식이 그대로 복사. 일단 복제해놓고")]),t._v(" "),r("li",[t._v("exec: 그 공간에 새 프로그램을 올림")]),t._v(" "),r("li",[t._v("자원은 공유 하기도, 안 하기도 (보통은 공유 X) 함. 공유를 해야 자원 등 절약이 가능하니까. 리눅스같은 효율적인 운영체제에서는 무작정 카피하지 않음. 스택이 달라지거나 분리가 필요할 때 "),r("strong",[t._v("Copy-On-Write (cow). 즉, write가 발생할때 카피한다")]),t._v(".")])]),t._v(" "),r("h3",{attrs:{id:"fork-코드-예시"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fork-코드-예시"}},[t._v("#")]),t._v(" fork 코드 예시")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://user-images.githubusercontent.com/50111853/154212591-5918ba6c-ea96-453a-961b-0fdc3c967d3d.png",alt:"C언어 fork"}})]),t._v(" "),r("ul",[r("li",[t._v("fork()한 후 반환된 pid가 새로 생기는 자식 프로세스의 pid.")]),t._v(" "),r("li",[t._v("Pid로 자식/부모 프로세스 구분함. pid가 0인게 자식 프로세스")]),t._v(" "),r("li",[t._v("자식 프로세스의 경우도 부모 프로세스의 문맥(especially "),r("strong",[t._v("프로그램 카운터)을 그대로 받기 때문에 fork()이후 코드부터")]),t._v(" 계속 실행함. (무한루프 아님!)")])]),t._v(" "),r("h3",{attrs:{id:"execlp-코드-예시"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#execlp-코드-예시"}},[t._v("#")]),t._v(" execlp 코드 예시")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://user-images.githubusercontent.com/50111853/154213451-ca76f59a-5c66-4342-ab2c-ab02ff0defa7.png",alt:"C언어 exec"}})]),t._v(" "),r("ul",[r("li",[t._v("exec으로 덮어써서 execlp 안에 있는 함수를 실행하는 프로세스가 된다.")]),t._v(" "),r("li",[t._v("예시의 경우 리눅스 명령어임")]),t._v(" "),r("li",[t._v("fork 안 하고 그냥 execlp만도 가능함")])]),t._v(" "),r("h3",{attrs:{id:"wait"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#wait"}},[t._v("#")]),t._v(" wait")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://user-images.githubusercontent.com/50111853/154214087-90459328-e68e-4712-9650-37727407008a.png",alt:"wait 예시"}})]),t._v(" "),r("ul",[r("li",[t._v("프로세스를 blocked 상태로 바꿔서 잠들게 함")]),t._v(" "),r("li",[t._v("부모가 자식 프로세스가 종료되길 기다리려고 sleep")])]),t._v(" "),r("h3",{attrs:{id:"종료-exit"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#종료-exit"}},[t._v("#")]),t._v(" 종료 (exit)")]),t._v(" "),r("ul",[r("li",[t._v("자식이 부모에게 output data를 보냄(via wait)")]),t._v(" "),r("li",[t._v("자식프로세스의 각종 자원이 os로 반납됨.")])]),t._v(" "),r("h4",{attrs:{id:"종료-종류"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#종료-종류"}},[t._v("#")]),t._v(" 종료 종류")]),t._v(" "),r("p",[t._v("자발적: 마지막 문장 실행 후 exit(), 컴파일러가 자동으로 중괄호 닫히는 곳(main 함수 리턴될때)에 exit 삽입\n비자발적: 부모가 자식프로세스 종료(abort), 키보드로 kill or break 클릭, 부모가 종료됨")]),t._v(" "),r("h3",{attrs:{id:"부모가-종료시킴-abort"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#부모가-종료시킴-abort"}},[t._v("#")]),t._v(" 부모가 종료시킴 (abort)")]),t._v(" "),r("ul",[r("li",[t._v("자식이 할당 자원의 한계를 넘어선 경우 or 그 태스크가 더이상 필요하지 않은 경우 or 부모 프로세스가 종료되는 경우")]),t._v(" "),r("li",[t._v("자식이 무조건 부모 프로세스보다 먼저 죽는다.")])]),t._v(" "),r("p",[t._v("fork, exec, wait, exit, abort 다 "),r("strong",[t._v("시스템 콜")])]),t._v(" "),r("h3",{attrs:{id:"프로세스간-협력-매커니즘-interprocess-communication-ipc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#프로세스간-협력-매커니즘-interprocess-communication-ipc"}},[t._v("#")]),t._v(" 프로세스간 협력 매커니즘 (Interprocess Communication, IPC)")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://user-images.githubusercontent.com/50111853/154215397-d639f937-1832-4728-958c-0df27e3e2636.png",alt:"IPC"}})]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("shared memory")]),t._v(": 일부 주소공간을 두 프로세스가 공유 (커널한테 그 공간 쓴다고 얘기한 후에는 자기들끼리 알아서)")]),t._v(" "),r("li",[r("strong",[t._v("message passing")]),t._v(": 공유변수 일체 없이 "),r("strong",[t._v("운영체제 커널을 통해")]),t._v(" 메시지를 보냄.")]),t._v(" "),r("li",[r("ol",[r("li",[t._v("direct: 메시지 받을 프로세스 이름을 직접 명시")])])]),t._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[t._v("indirect: mailbox 또는 port 이름을 통해 간접 전달")])])])]),t._v(" "),r("p",[t._v("쓰레드는 사실상 프로세스이므로 "),r("strong",[t._v("동일한 프로세스를 구성하는 쓰레드간 협력 당연히 가능함.")])]),t._v(" "),r("h3",{attrs:{id:"cpu-and-i-o-burst"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cpu-and-i-o-burst"}},[t._v("#")]),t._v(" CPU and I/O Burst")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://user-images.githubusercontent.com/50111853/154215769-6e0246a6-cd25-475f-abd3-c18162082784.png",alt:"스크린샷 2022-02-16 오후 4 22 42"}}),t._v("\n프로그램이 실행된다는건 CPU burst+ io burst가 반복되는 것이다.")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://user-images.githubusercontent.com/50111853/154216000-0e217f07-43dc-491d-8e92-0c96fd767d79.png",alt:"스크린샷 2022-02-16 오후 4 24 22"}})]),t._v(" "),r("ul",[r("li",[t._v("IO-bound Job: 사람이 많이 끼어들고 "),r("strong",[t._v("인터랙션이 많으면")]),t._v(" io burst가 잦고 길다")]),t._v(" "),r("li",[t._v("CPU-bound Job: 과학 연산 등은 주로 CPU를 많이 쓰고 CPU burst가 길다")])]),t._v(" "),r("p",[t._v("-> "),r("strong",[t._v("인터랙션이 많은 IO bound 잡한테 CPU를 많이 줘야 사용자가 안 답답함")]),t._v(" -> CPU 스케줄링의 주요한 이슈")]),t._v(" "),r("p",[t._v("프로세스는 io bound / cpu bound 프로세스 두개로 나뉜다.")]),t._v(" "),r("h2",{attrs:{id:"공부가-끝나고-느낀-점"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#공부가-끝나고-느낀-점"}},[t._v("#")]),t._v(" 공부가 끝나고 느낀  점")]),t._v(" "),r("ul",[r("li",[t._v("부모 프로세스가 자식 프로세스를 만드는 건 알았는데 구체적인 방법과 그때 사용되는 명령어를 알게 돼서 지식이 깊어진 느낌이다.")]),t._v(" "),r("li",[t._v("지난 챕터들에서 배웠던 프로그램 카운터나 blocked 등의 개념이 이번 장에도 연결돼 나와서 엮어가며 생각해보는 맛이 있었다.")])])])}),[],!1,null,null,null);a.default=e.exports}}]);